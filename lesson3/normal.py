import unittest


"""
ИМЕННЫЕ КОРОВКИ

задача на срезы строк

1. В хищной среде обитания божьих коровок принято давать
имена новоприбывшим следующим образом:
 - Из имя_папы_коровки взять 5 символов с конца и поставить их в начало нового имени;
 - Из имени_мамы_коровки взять 4 символа после второго символа и поставить их
в конец нового имени;
 - Перевернуть полученный результат задом наперёд;
 - Наслаждаться новым именем!
"""


def generate_god_cow_name(mother_cow_name, father_cow_name):
    result = ""
    # код пишем тут

    return result


"""
ПОТЕРЯШКИ

Задача на методы строк

2. Вы потерялись в лесу.
Нужно громко позвать на помощь. Для этого у вас есть карманный мегафон.
Но рядом бродит мишка. Если Мишка рядом (в радиусе 2 километров), кричать не надо. 
Мы не хотим его зря беспокоить. В этом случае тихо шепчем.
"""


def call_help(help_text, distance_to_bear):
    return help_text


class TestGenerateName(unittest.TestCase):
    def test_mother_father(self):
        self.assertEqual(generate_god_cow_name("pikachu", "bulbasaur"), "hcakruasa")


class TestLostInForest(unittest.TestCase):
    def test_far_bear(self):
        self.assertEqual(call_help("Помогите! Я потерялся! В лесу ещё есть кто живой?!", 6),
                         "ПОМОГИТЕ! Я ПОТЕРЯЛСЯ! В ЛЕСУ ЕЩЁ ЕСТЬ КТО ЖИВОЙ?!")

    def test_near_bear(self):
        self.assertEqual(call_help("Тише, Миша! Не кушай меня! Вот тут есть машина, садись в неё, но только не гори!", 2),
                         "тише, миша! не кушай меня! вот тут есть машина, садись в неё, но только не гори!")


if __name__ == '__main__':
    unittest.main()
